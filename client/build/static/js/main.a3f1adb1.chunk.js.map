{"version":3,"sources":["components/navbar/Navbar.jsx","pages/zap/Zap.jsx","pages/admin/Admin.jsx","utils.js","App.js","index.js"],"names":["Navbar","connectWallet","isConnected","className","to","onClick","Zap","web3","accounts","contracts","useState","activeTab","setActiveTab","block","setBlock","lpBalance","setLpBalance","underTokenBalance","setUnderTokenBalance","govTokenBalance","setGovTokenBalance","amount","setAmount","handleAction","e","a","preventDefault","liquidityPool","methods","deposit","send","from","withdraw","useEffect","Promise","all","balanceOf","call","checkpoints","balance","checkpoint","init","map","tab","i","value","onChange","target","placeholder","handleSetMax","Admin","totalUsers","setTotalUsers","totalPool","setTotalPool","getUsers","users","length","getContracts","eth","net","getId","networkId","deployedNetwork","LiquidityPool","networks","Contract","abi","address","App","undefined","setWeb3","setAccounts","setContracts","setIsConnected","resolve","reject","detectEthereumProvider","provider","request","method","Web3","window","ethereum","error","getAccounts","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a3f1adb1.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css'\n\nexport const Navbar = ({ connectWallet, isConnected }) => {\n  return (\n    <nav>\n      <b className=\"logo\">FarmBin</b>\n\n      <div className=\"nav-links\">\n        <Link to=\"/\"> Farm </Link>\n        <Link to=\"/admin\"> Admin </Link>\n      </div>\n\n      <button className=\"connect-btn\" onClick={connectWallet}>\n        {isConnected ? 'Connected' : 'Connect Wallet'}\n      </button>\n    </nav>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport './Zap.css'\n\nexport const Zap = ({ web3, accounts, contracts }) => {\n  const [activeTab, setActiveTab] = useState('deposit')\n  const [block, setBlock] = useState(0)\n  const [lpBalance, setLpBalance] = useState(0)\n  const [underTokenBalance, setUnderTokenBalance] = useState(0)\n  const [govTokenBalance, setGovTokenBalance] = useState(0)\n  const [amount, setAmount] = useState(0)\n\n  const handleAction = async (e) => {\n    e.preventDefault()\n    if (activeTab === 'deposit') {\n      await contracts.liquidityPool.methods\n        .deposit(amount)\n        .send({ from: accounts[0] })\n      setAmount(0)\n    } else {\n      await contracts.liquidityPool.methods\n        .withdraw(amount)\n        .send({ from: accounts[0] })\n      setAmount(0)\n    }\n  }\n\n  const handleSetMax = (e) => {\n    e.preventDefault()\n    if (activeTab === 'deposit') {\n      setAmount(underTokenBalance)\n    } else {\n      setAmount(lpBalance)\n    }\n  }\n\n  useEffect(() => {\n    const init = async () => {\n      const [\n        balance,\n        checkpoint,\n        underTokenBalance,\n        govTokenBalance,\n      ] = await Promise.all([\n        contracts.liquidityPool.methods.balanceOf(accounts[0]).call(),\n        contracts.liquidityPool.methods.checkpoints(accounts[0]).call(),\n        contracts.liquidityPool.methods.underTokenBalance().call(),\n        contracts.liquidityPool.methods.govTokenBalance().call(),\n      ])\n      setLpBalance(balance)\n      setBlock(checkpoint)\n      setUnderTokenBalance(underTokenBalance)\n      setGovTokenBalance(govTokenBalance)\n    }\n    init()\n    // eslint-disable-next-line\n  }, [amount])\n\n  if (\n    typeof balance === 'undefined' &&\n    typeof checkpoint === 'undefined' &&\n    typeof underTokenBalance === 'undefined'\n  ) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div className=\"zap\">\n      <div className=\"card\">\n        <div className=\"switch\">\n          {['deposit', 'withdraw'].map((tab, i) => {\n            return (\n              <button\n                key={i}\n                onClick={() => setActiveTab(tab)}\n                className={activeTab === tab ? 'active-switch' : null}\n              >\n                {tab}\n              </button>\n            )\n          })}\n        </div>\n        <div className=\"list-info\">\n          <span>Current Block:</span>\n          <b>{block}</b>\n        </div>\n        <div className=\"list-info\">\n          <span>Reward Per Block:</span>\n          <b>1</b>\n        </div>\n        <div className=\"list-info\">\n          <span>Total Deposits:</span>\n          <b> {lpBalance} UTK</b>\n        </div>\n        <div className=\"list-info\">\n          <span>Governance Token Balance:</span>\n          <b> {govTokenBalance} GTK</b>\n        </div>\n        <div className=\"list-info\">\n          <span>Liquidity Pool Token Balance:</span>\n          <b> {lpBalance} LTK </b>\n        </div>\n        <div className=\"input-group\">\n          <input\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder={`Enter Amount in ${\n              activeTab === 'deposit' ? 'UTK' : 'LTK'\n            }`}\n          />\n          <button onClick={(e) => handleSetMax(e)}> Max </button>\n        </div>\n        <span className=\"available-balance\">\n          Available balance: {underTokenBalance}{' '}\n          {activeTab === 'deposit' ? 'UTK' : 'LTK'}\n        </span>\n        <button className=\"connect-btn\" onClick={(e) => handleAction(e)}>\n          {activeTab === 'deposit' ? 'Deposit' : 'Withdraw'}\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport './Admin.css'\n\nexport const Admin = ({ contracts }) => {\n  const [totalUsers, setTotalUsers] = useState(0)\n  const [totalPool, setTotalPool] = useState(0)\n  useEffect(() => {\n    const init = async () => {\n      const [users, totalPool] = await Promise.all([\n        contracts.liquidityPool.methods.getUsers().call(),\n        contracts.liquidityPool.methods.totalPool().call(),\n        contracts.liquidityPool.methods.totalPool().call(),\n      ])\n      setTotalUsers(users.length)\n      setTotalPool(totalPool)\n    }\n    init()\n    // eslint-disable-next-line\n  }, [])\n  return (\n    <div className=\"admin\">\n      <div className=\"card\">\n        <div className=\"analytic\">\n          <h5>Total Pool Balance (UTK)</h5>\n          <h1>{totalPool}</h1>\n        </div>\n\n        <div className=\"analytic\">\n          <h5>Total Users</h5>\n          <h1>{totalUsers}</h1>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import Web3 from 'web3'\nimport LiquidityPool from './contracts/LiquidityPool.json'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nconst getWeb3 = () =>\n  new Promise(async (resolve, reject) => {\n    let provider = await detectEthereumProvider()\n\n    if (provider) {\n      await provider.request({ method: 'eth_requestAccounts' })\n\n      try {\n        const web3 = new Web3(window.ethereum)\n\n        resolve(web3)\n      } catch (error) {\n        reject(error)\n      }\n    }\n    reject('Install Metamask')\n  })\n\nconst getContracts = async (web3) => {\n  const networkId = await web3.eth.net.getId()\n  const deployedNetwork = LiquidityPool.networks[networkId]\n  const liquidityPool = new web3.eth.Contract(\n    LiquidityPool.abi,\n    deployedNetwork && deployedNetwork.address,\n  )\n\n  return {\n    liquidityPool,\n  }\n}\n\nexport { getWeb3, getContracts }\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Navbar } from './components'\nimport { Zap, Admin } from './pages'\nimport { getWeb3, getContracts } from './utils'\n\nimport './App.css'\nimport { useEffect, useState } from 'react'\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined)\n  const [accounts, setAccounts] = useState([])\n  const [contracts, setContracts] = useState(undefined)\n  const [isConnected, setIsConnected] = useState(false)\n\n  const connectWallet = async () => {\n    if (isConnected) return\n    const web3 = await getWeb3()\n    const contracts = await getContracts(web3)\n    const accounts = await web3.eth.getAccounts()\n    setWeb3(web3)\n    setContracts(contracts)\n    setAccounts(accounts)\n    setIsConnected(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar connectWallet={connectWallet} isConnected={isConnected} />\n        {isConnected && (\n          <Switch>\n            {/* <Route exact path=\"/\" component={Zap} /> */}\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Zap web3={web3} accounts={accounts} contracts={contracts} />\n              )}\n            />\n            <Route\n              path=\"/admin\"\n              render={() => (\n                <Admin contracts={contracts} />\n              )}\n            />\n          </Switch>\n        )}\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}